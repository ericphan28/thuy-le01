import { createClient } from "@/lib/supabase/server"
import { Badge } from "@/components/ui/badge"
import Link from 'next/link'
import ResetPriceBook from '@/components/pricing/reset-price-book'

export default async function ResetPriceBookPage() {
  const supabase = await createClient()
  
  // Get all price books
  const { data: priceBooks, error } = await supabase
    .from('price_books')
    .select('price_book_id, name, channel, is_active')
    .order('created_at', { ascending: false })

  if (error) {
    console.error('Error fetching price books:', error)
  }

  return (
    <div className="container mx-auto py-6 px-4 max-w-4xl">
      {/* Header */}
      <div className="flex items-center justify-between mb-6">
        <div>
          <h1 className="text-3xl font-bold tracking-tight">üîÑ Reset B·∫£ng Gi√°</h1>
          <p className="text-muted-foreground mt-2">
            Kh√¥i ph·ª•c b·∫£ng gi√° v·ªÅ tr·∫°ng th√°i m·∫∑c ƒë·ªãnh v·ªõi c√°c template c√≥ s·∫µn
          </p>
        </div>
        <div className="flex gap-2">
          <Link 
            href="/dashboard/pricing/simulator" 
            className="px-4 py-2 text-sm bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors"
          >
            üéØ M√¥ ph·ªèng gi√°
          </Link>
          <Link 
            href="/dashboard/pricing/books" 
            className="px-4 py-2 text-sm bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
          >
            üìñ Qu·∫£n l√Ω b·∫£ng gi√°
          </Link>
        </div>
      </div>

      {/* Info Box */}
      <div className="bg-amber-50 border border-amber-200 rounded-lg p-4 mb-6">
        <h3 className="font-semibold text-amber-800 mb-2">‚ÑπÔ∏è V·ªÅ ch·ª©c nƒÉng Reset:</h3>
        <div className="text-sm text-amber-700 space-y-1">
          <div><strong>M·∫∑c ƒë·ªãnh</strong> c√≥ nghƒ©a l√† √°p d·ª•ng m·ªôt b·ªô quy t·∫Øc gi√° chu·∫©n, ph√π h·ª£p v·ªõi nghi·ªáp v·ª• th√¥ng th∆∞·ªùng</div>
          <div><strong>X√≥a s·∫°ch:</strong> Ch·ªâ d√πng gi√° ni√™m y·∫øt, kh√¥ng c√≥ quy t·∫Øc gi·∫£m gi√°</div>
          <div><strong>C∆° b·∫£n:</strong> √Åp d·ª•ng gi·∫£m gi√° theo s·ªë l∆∞·ª£ng ƒë∆°n gi·∫£n</div>
          <div><strong>POS Template:</strong> B·ªô quy t·∫Øc chuy√™n nghi·ªáp cho b√°n h√†ng t·∫°i qu·∫ßy</div>
        </div>
      </div>

      {/* Price Books List */}
      {priceBooks && priceBooks.length > 0 ? (
        <div className="space-y-6">
          <div>
            <h2 className="text-xl font-semibold mb-4">üìã Ch·ªçn b·∫£ng gi√° c·∫ßn reset:</h2>
            <div className="grid gap-4">
              {priceBooks.map((priceBook) => (
                <div key={priceBook.price_book_id} className="border rounded-lg p-4">
                  <div className="flex items-center justify-between mb-4">
                    <div className="flex items-center gap-3">
                      <h3 className="font-medium text-lg">{priceBook.name}</h3>
                      <Badge variant={priceBook.is_active ? "default" : "secondary"}>
                        {priceBook.is_active ? "Ho·∫°t ƒë·ªông" : "Kh√¥ng ho·∫°t ƒë·ªông"}
                      </Badge>
                      {priceBook.channel && (
                        <Badge variant="outline">
                          {priceBook.channel}
                        </Badge>
                      )}
                    </div>
                  </div>
                  
                  <ResetPriceBook 
                    priceBookId={priceBook.price_book_id}
                    priceBookName={priceBook.name}
                    onResetComplete={() => {
                      // Optional: Refresh page or show notification
                      window.location.reload()
                    }}
                  />
                </div>
              ))}
            </div>
          </div>
        </div>
      ) : (
        <div className="text-center py-12">
          <div className="text-6xl mb-4">üìã</div>
          <h3 className="text-xl font-semibold mb-2">Kh√¥ng c√≥ b·∫£ng gi√° n√†o</h3>
          <p className="text-muted-foreground mb-6">
            B·∫°n c·∫ßn t·∫°o √≠t nh·∫•t m·ªôt b·∫£ng gi√° tr∆∞·ªõc khi c√≥ th·ªÉ reset
          </p>
          <Link 
            href="/dashboard/pricing/books" 
            className="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
          >
            ‚ûï T·∫°o b·∫£ng gi√° m·ªõi
          </Link>
        </div>
      )}

      {/* Warning */}
      <div className="mt-8 bg-red-50 border border-red-200 rounded-lg p-4">
        <h3 className="font-semibold text-red-800 mb-2">‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</h3>
        <div className="text-sm text-red-700 space-y-1">
          <div>‚Ä¢ Thao t√°c reset s·∫Ω <strong>x√≥a t·∫•t c·∫£ quy t·∫Øc gi√° hi·ªán t·∫°i</strong> c·ªßa b·∫£ng gi√° ƒë√£ ch·ªçn</div>
          <div>‚Ä¢ D·ªØ li·ªáu ƒë√£ x√≥a <strong>kh√¥ng th·ªÉ kh√¥i ph·ª•c</strong>, h√£y c√¢n nh·∫Øc k·ªπ tr∆∞·ªõc khi th·ª±c hi·ªán</div>
          <div>‚Ä¢ N√™n backup d·ªØ li·ªáu quan tr·ªçng tr∆∞·ªõc khi reset</div>
          <div>‚Ä¢ Sau khi reset, b·∫°n c√≥ th·ªÉ th√™m quy t·∫Øc m·ªõi ho·∫∑c ch·ªânh s·ª≠a c√°c quy t·∫Øc template</div>
        </div>
      </div>
    </div>
  )
}
